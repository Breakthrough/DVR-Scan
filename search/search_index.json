{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#dvr-scan-title","title":"DVR-Scan","text":""},{"location":"#dvr-scan-subtitle","title":"Find and extract motion events in videos.","text":"<p>Latest Version: 1.6 (October 15, 2023)</p> <p> \u00a0 Download User Guide \u00a0 Documentation \u00a0 Resources</p> <p>DVR-Scan is a command-line application that automatically detects motion events in video files (e.g. security camera footage).  DVR-Scan looks for areas in footage containing motion, and saves each event to a separate video clip.  DVR-Scan is free and open-source software, and works on Windows, Linux, and Mac.</p>"},{"location":"#quickstart","title":"Quickstart","text":"<p>Scan <code>video.mp4</code> (separate clips for each event):</p> <pre><code>dvr-scan -i video.mp4\n</code></pre> <p>Only scan a region of interest (see user guide or hit <code>H</code> for controls):</p> <pre><code>dvr-scan -i video.mp4 -r\n</code></pre> <p></p> <p>Draw boxes around motion:</p> <pre><code>dvr-scan -i video.mp4 -bb\n</code></pre> <p></p> <p>Use <code>ffmpeg</code> to extract events:</p> <pre><code>dvr-scan -i video.mp4 -m ffmpeg\n</code></pre> <p>Once installed, see the user guide to get started, try one of the examples above, or type <code>dvr-scan --help</code>. Press <code>Ctrl + C</code> to stop processing at any time.</p> <p>See the documentation for a complete description of all command-line and config file settings.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#dvr-scan-16","title":"DVR-Scan 1.6","text":""},{"location":"changelog/#16-october-15-2023","title":"1.6 (October 15, 2023)","text":""},{"location":"changelog/#release-notes","title":"Release Notes","text":"<p>DVR-Scan greatly improves masking capabilities with the new region editor (user guide):</p> <p> </p> <p>Multiple regions can now be defined with any shape, size, and complexity. Region data can be saved to a file and loaded again. Regions can also be specified by command line.</p> <p>There are also several other bugfixes and improvements, such as improved seeking performance.</p>"},{"location":"changelog/#changelog_1","title":"Changelog","text":"<ul> <li>[feature] New region editor <code>-r</code>/<code>--region-editor</code> allows creation of multiple regions without shape restrictions, replaces <code>-roi</code>/<code>--region-of-interest</code></li> <li>[feature] Multiple regions of interest (rectangular or polygonal) can now be created:<ul> <li>Using the new region editor by adding the <code>-r</code>/<code>--region-editor</code> flag: <code>dvr-scan -i video.mp4 -r</code></li> <li>New <code>-a</code>/<code>--add-region</code> replaces <code>-roi</code>/<code>--region-of-interest</code> option: <code>dvr-scan -i video.mp4 -a 5 5 20 5 20 20 5 20</code></li> <li>Regions can now be saved to a file: press S in the region editor or use <code>-s</code>/<code>--save-region</code></li> <li>Regions can now be loaded from a file: press O in the region editor or use <code>-R</code>/<code>--load-region</code></li> <li>Config files can specify a region file to use by default with the <code>load-region</code> option, replaces the <code>region-of-interest</code> setting</li> </ul> </li> <li>[feature] New <code>-fm</code> / <code>--frame-metrics</code> option draws motion score on each frame to help tune detection parameters</li> <li>[cli] Short flag <code>-v</code> is now used for <code>--verbosity</code>, replaced by <code>-V</code> for <code>--version</code></li> <li>[cli] <code>-roi</code>/<code>--region-of-interest</code> is now deprecated, replaced by region editor and add/save/load region flags<ul> <li>Specifying this option will display the ROI in the new region format allowing you to update usages more easily</li> </ul> </li> <li>[general] Improved seeking performance, using <code>-st</code>/<code>--start-time</code> is now much faster (#92)  -detection-parameters)</li> <li>[general] Noise reduction kernel can now be disabled by setting <code>-k</code>/<code>--kernel-size</code> to <code>0</code> (#123)</li> <li>[general] Include stack traces in logfiles when setting <code>--verbosity debug</code></li> <li>[bugfix] Add <code>max-score</code> option to config file to fix CNT mode always treating first few frame as motion, default is 255.0 #119</li> <li>[bugfix] Fix timecode format <code>HH:MM:SS[.nnn]</code> being rejected for start/end time (#141)</li> <li>[bugfix] Fix incorrect RGB mapping for config file (values were treated as BGR instead)</li> <li>[other] Config option <code>timecode</code> has been renamed to <code>time-code</code> to match the command-line option</li> <li>[other] Config options that started with <code>timecode-</code> have been renamed to start with <code>text-</code>, and are now shared between the <code>time-code</code> and <code>frame-metrics</code> overlays:<ul> <li><code>time-code-margin</code> is now <code>text-margin</code></li> <li><code>time-code-font-scale</code> is now <code>text-font-scale</code></li> <li><code>time-code-font-thickness</code> is now <code>text-font-thickness</code></li> <li><code>time-code-font-color</code> is now <code>text-font-color</code></li> <li><code>time-code-bg-color</code> is now <code>text-bg-color</code></li> </ul> </li> </ul>"},{"location":"changelog/#dvr-scan-15","title":"DVR-Scan 1.5","text":""},{"location":"changelog/#151-august-15-2022","title":"1.5.1 (August 15, 2022)","text":""},{"location":"changelog/#changelog_2","title":"Changelog","text":"<ul> <li>[bugfix] Fix crash when opening multiple input videos (#95)</li> <li>[bugfix] Fix incorrect warning regarding frame decode failures at end of video</li> </ul>"},{"location":"changelog/#15-july-30-2022","title":"1.5 (July 30, 2022)","text":""},{"location":"changelog/#release-notes_1","title":"Release Notes","text":"<ul> <li>Significant performance improvements on multicore systems</li> <li>Support wildcards/globs as inputs for scanning entire folders (<code>-i folder/*.mp4</code>)</li> <li>Allow use of ffmpeg for better output quality (<code>-m ffmpeg</code>) or codec-copying mode (<code>-m copy</code>)</li> <li>Configuration files are now supported, see documentation for details<ul> <li>Can specify config file path with <code>-c</code>/<code>--config</code>, or create a <code>dvr-scan.cfg</code> file in your user config folder</li> </ul> </li> <li>Windows binaries are now signed, thanks SignPath.io (certificate by SignPath Foundation)</li> <li>Experimental Nvidia CUDA\u00ae support has been added (set <code>-b MOG2_CUDA</code>)<ul> <li>If installing via <code>pip</code>, requires manual installation of OpenCV compiled with CUDA support</li> <li>If downloading Windows version, make sure to download the GPU-enabled build (<code>dvr-scan-1.5-win64-cuda.zip</code>)</li> <li>CUDA-enabled builds are not code signed, and do not include the <code>CNT</code> method</li> </ul> </li> <li>Minimum supported Python version is now 3.7</li> <li>Minimum supported OpenCV version is now 3.x</li> </ul>"},{"location":"changelog/#command-line-changes","title":"Command-Line Changes","text":"<ul> <li>New options:<ul> <li><code>-c</code>/<code>--config</code> - set path to config file</li> <li><code>-d</code>/<code>--output-dir</code> - set directory to write output files (default is working directory)</li> <li><code>-m</code>/<code>--output-mode</code> - set output mode (one of: <code>opencv</code>, <code>ffmpeg</code>, <code>copy</code>)</li> <li><code>-mo</code>/<code>--mask-output</code> - path to write motion mask for analysis</li> <li><code>--verbosity</code> and <code>--logfile</code> - control output verbosity and path to save output</li> </ul> </li> <li><code>-i</code>/<code>--input</code> now supports globs/wildcards to scan entire folders, e.g. <code>-i folder/*.mp4</code></li> <li>Change default value for <code>-l</code>/<code>--min-event-length</code> to 0.1 seconds, previously was 2 frames</li> <li>Long form of <code>-roi</code> has been renamed to <code>--region-of-interest</code> (previously was <code>--rectangle-of-interest</code>)</li> <li><code>-c</code> is now used for <code>--config</code>, previously was for <code>--codec</code></li> <li>Add experimental <code>MOG2_CUDA</code> option for <code>-b</code>/<code>--bg-subtractor</code></li> <li>Rename existing <code>MOG</code> option to <code>MOG2</code></li> <li><code>--codec</code> has been removed, the value should now be set using a config file</li> </ul>"},{"location":"changelog/#changelog_3","title":"Changelog","text":"<ul> <li>[feature] Configuration file support and new <code>-c</code>/<code>--config</code> argument to specify path to config files (#77)<ul> <li>Breaks existing behavior of <code>-c</code> (was previously the shortform of <code>--codec</code>)</li> </ul> </li> <li>[feature] Add support for multiple output modes via <code>-m</code>/<code>--output-mode</code> argument (#27, #42)</li> <li>[feature] Experimental support for GPU-based CUDA MOG2 filter (#12)</li> <li>[feature] Video encoding and decoding are now done in parallel with the scanning logic leading to improved performance on most systems (#52)</li> <li>[feature] Add support for exporting motion masks via <code>-mo</code>/<code>--mask-output</code> argument<ul> <li>Useful for detailed analysis or tuning of detection parameters</li> <li>ffmpeg can be used to generate output videos by specifying <code>-m ffmpeg</code></li> <li>Codec-copy mode, using ffmpeg, can be used by specifying <code>-m copy</code></li> </ul> </li> <li>[feature] Add <code>--verbosity</code> and <code>--logfile</code> arguments to provide more control over program output</li> <li>[feature] Allow scanning entire folders using wildcards with <code>-i</code>/<code>--input</code> (#5)<ul> <li>Glob expansion is also performed on each input path directly, so quoted globs also function correctly</li> </ul> </li> <li>[bugfix] Fix incorrect results when <code>-st</code>/<code>--start-time</code> is set</li> <li>[bugfix] Event start times are now correctly calculated when using <code>-fs</code>/<code>--frame-skip</code> (#68, #70)<ul> <li>Note that all skipped frames within the event window are included in motion event, thus the calculated start time may be slightly earlier</li> </ul> </li> <li>[bugfix] Only get screen resolution when required (was causing issues on headless machines)</li> <li>[bugfix] Fix output messages conflicting with progress bar shown during scanning</li> <li>[bugfix] Output events now start from 1 to align with the event list</li> <li>[bugfix] Event end times now include the presentation duration of the last frame</li> <li>[bugfix] Small values for <code>-l</code>/<code>--min-event-length</code> are now handled correctly, previously would cause an error</li> <li>[enhancement] Progress bar now indicates how many events have been detected so far</li> <li>[enhancement] Change default value for <code>min_event_len</code> to 0.1 seconds, previously was 2 frames (#91)</li> </ul>"},{"location":"changelog/#known-issues","title":"Known Issues","text":"<ul> <li>Attempting to open multiple input videos will cause DVR-Scan to crash, fixed in v1.5.1 (#95)</li> <li>Variable framerate videos (VFR) are not fully supported, and will yield incorrect timestamps (#20)</li> <li>Video output when using frame skip and <code>-m opencv</code> (default output mode) will result in frames missing from the exported videos (#81)<ul> <li>Use <code>-m ffmpeg</code> or <code>-m copy</code> as a workaround</li> </ul> </li> <li>Multiple input videos are not supported with <code>-m ffmpeg</code> or <code>-m copy</code> (#86)<ul> <li>Use ffmpeg to concatenate/merge input videos before processing as a workaround</li> </ul> </li> <li>CUDA builds do not include the <code>CNT</code> option for <code>-b</code>/<code>--bg-subtractor</code></li> </ul>"},{"location":"changelog/#dvr-scan-14","title":"DVR-Scan 1.4","text":""},{"location":"changelog/#141-february-20-2022","title":"1.4.1 (February 20, 2022)","text":""},{"location":"changelog/#release-notes_2","title":"Release Notes","text":"<p>This release includes fixes for incorrect event start/end times when using frame skipping, and improvements to the bounding box overlays.</p> <p>Important: Aside from critical bugfixes, DVR-Scan 1.4.x is the last minor version supporting Python 2.7.  Starting from v1.5, the new minimum supported Python version will be 3.6 (see #83 for details).</p>"},{"location":"changelog/#changelog_4","title":"Changelog","text":"<ul> <li>[bugfix] Event start times are now correctly calculated when using <code>-fs</code>/<code>--frame-skip</code> (#68, #70)<ul> <li>Note that event start/end times may still be off by how many frames are skipped due to loss of context with respect to frame-accurate motion detection</li> </ul> </li> <li>[bugfix] Event end times now take into account the number of skipped frames if <code>-fs</code>/<code>--frame-skip</code> if specified (e.g. it is assumed all skipped frames contained motion)</li> <li>[bugfix] Bounding box smoothing now takes into account <code>-fs</code>/<code>--frame-skip</code> (#31)</li> <li>[bugfix] Bounding boxes now cover all frames with motion (#31)<ul> <li>In v1.4 only the frames after <code>-l</code>/<code>--min-event-length</code> frames had passed were covered</li> </ul> </li> </ul>"},{"location":"changelog/#known-issues_1","title":"Known Issues","text":"<ul> <li>Variable framerate videos (VFR) are not fully supported, and will yield incorrect timestamps (#20)</li> <li>Using <code>-st</code>/<code>--start-time</code> will yield incorrect results</li> <li>If a motion event happens to be exactly the number of frames specified by <code>-l</code>/<code>--min-event-length</code>, the end timecode will be displayed incorrectly (#90)</li> </ul>"},{"location":"changelog/#14-february-8-2022","title":"1.4 (February 8, 2022)","text":""},{"location":"changelog/#release-notes_3","title":"Release Notes","text":"<p>In addition to several bugfixes, this release of DVR-Scan adds the ability to draw a bounding box around the area in the frame where motion was detected. There are also several improves when using <code>-fs</code>/<code>--frame-skip</code> and/or <code>-df</code>/<code>--downscale-factor</code> by ensuring all other option are relative to the original video framerate/resolution.</p> <p>Important: Aside from critical bugfixes, DVR-Scan 1.4.x is the last minor version supporting Python 2.7.  Starting from v1.5, the new minimum supported Python version will be 3.6 (see #83 for details).</p>"},{"location":"changelog/#changelog_5","title":"Changelog","text":"<ul> <li>[feature] Add new <code>--bb</code>/<code>--bounding-box</code> option to draw rectangle around the area in the video where motion was detected<ul> <li>An amount to temporally smooth the box in time can also be specified after <code>-bb</code> (e.g. <code>-bb 0.5s</code>), where the default is 0.1s</li> </ul> </li> <li>[bugfix] Processing errors should now return a non-zero exit code</li> <li>[bugfix] Allow a maximum window size to be set when using <code>-roi</code> (#59):<ul> <li>The <code>-roi</code> flag now accepts a maximum window size for the ROI selection window (e.g. <code>-roi 1920 1080</code>)</li> <li>If the <code>screeninfo</code> package is installed, or you are using a Windows build, videos will automatically be resized to the maximum screen size</li> </ul> </li> <li>[bugfix] Fix frozen timestamp at beginning of video (#68)</li> <li>[bugfix] Fix output videos not including all of the duration specified by <code>-tb</code>/<code>--time-before</code> in certain cases (#68</li> <li>[bugfix] Fix event start times not reflecting <code>-l</code>/<code>--min-event-length</code> and <code>-tb</code>/<code>--time-before</code> (#68</li> <li>[bugfix] Scanning no longer stops suddenly after a frame fails to decode (#62)<ul> <li>If more than 1 corrupt frame is found, a warning will be displayed with the number of frame decode failures</li> <li>If more than 5 frames in a row fail to be decoded, processing will stop and display an error</li> </ul> </li> <li>[bugfix] When no events have been found, an empty file is no longer created if <code>-o/--output</code> is specified</li> <li>[enhancement] <code>-k</code>/<code>--kernel-size</code> is now relative to the original video resolution, and will be reduced to adjust for <code>-df</code>/<code>--downscale-factor</code> if set (#46)</li> <li>[bugfix] Output videos now have the correct playback speed when using <code>-fs</code>/<code>--frame-skip</code> by reducing the framerate (#70)</li> <li>[bugfix] The <code>-l</code>/<code>--min-event-length</code> and <code>-tp</code>/<code>--time-post-event</code> parameters are now adjusted to compensate for <code>-fs</code>/<code>--frame-skip</code> if set (#70)</li> <li>[bugfix] An erroneus event (false positive) is no longer generated at the beginning of a video when <code>-l</code>/<code>--min-event-length</code> is equal to 1 frame</li> </ul>"},{"location":"changelog/#known-issues_2","title":"Known Issues","text":"<ul> <li>Variable framerate videos (VFR) are not fully supported, and will yield incorrect timestamps (#20)</li> <li>When using <code>-fs</code>/<code>--frame-skip</code>, event start times do not include all of <code>-tb</code>/<code>--time-before-event</code> (#68, #70)</li> <li>When using <code>-bb</code>/<code>--bounding-box</code>, the amount of time covered by <code>-l</code>/<code>--min-event-length</code> will be missing bounding box overlays (#31)</li> <li>Using <code>-st</code>/<code>--start-time</code> will yield incorrect results</li> <li>If a motion event happens to be exactly the number of frames specified by <code>-l</code>/<code>--min-event-length</code>, the end timecode will be displayed incorrectly (#90)</li> </ul>"},{"location":"changelog/#dvr-scan-13","title":"DVR-Scan 1.3","text":""},{"location":"changelog/#13-may-23-2021","title":"1.3 (May 23, 2021)","text":""},{"location":"changelog/#release-notes_4","title":"Release Notes","text":"<p>This version of DVR-Scan includes a new, faster background subtraction algorithm (<code>-b CNT</code>).  Results may be slightly different when using this method, so any feedback is most welcome.</p>"},{"location":"changelog/#changelog_6","title":"Changelog","text":"<ul> <li>[feature] Add new <code>-b</code>/<code>--bg-subtractor</code> argument to allow selecting between the MOG and CNT background subtractor types (e.g. <code>dvr-scan -b CNT</code>). Resolves #48. The following background subtractor types are available:<ul> <li><code>MOG</code> is the default</li> <li><code>CNT</code> is a newer, faster algorithm (feedback is welcome)</li> </ul> </li> <li>[bugfix] When using the <code>-o</code>/<code>--output</code> argument, a file is no longer written to disk if no motion events are found in the input file (#50)</li> </ul>"},{"location":"changelog/#known-issues_3","title":"Known Issues","text":"<ul> <li>Variable framerate videos (VFR) are not fully supported, and will yield incorrect timestamps (#20)</li> <li>Using the <code>-roi</code> flag with high resolution videos can result in the window exceeding the size of the monitor (#59)</li> <li>When using <code>-tc</code>/<code>--time-code</code> the start of the video may have a frozen timestamp (#68)</li> <li>The kernel size must be manually adjusted when using <code>-df</code>/<code>--downscale-factor</code> (#46)</li> <li>When using <code>--frame-skip</code>, the <code>--min-event-length</code> parameter must be manually adjusted, and exported clips will have the wrong playback speed</li> </ul>"},{"location":"changelog/#dvr-scan-12","title":"DVR-Scan 1.2","text":""},{"location":"changelog/#12-march-10-2021","title":"1.2 (March 10, 2021)","text":""},{"location":"changelog/#changelog_7","title":"Changelog","text":"<ul> <li>[bugfix] Fix quiet mode (<code>-q/--quiet</code>) not working correctly (#19, #35)</li> <li>[bugfix] Fix downscale factor (<code>-df</code>/<code>--downscale-factor</code>) having no effect (#46)</li> <li>[api] Swap order of <code>fps</code> and <code>timecode</code> arguments in <code>FrameTimecode</code> constructor to match that of PySceneDetect (#33)</li> <li>[api] Refactor ScanContext class for better usage from Python (#33)</li> <li>[api] Use named logger rather than print statements (#35)</li> </ul>"},{"location":"changelog/#known-issues_4","title":"Known Issues","text":"<ul> <li>When using the <code>-o</code>/<code>--output</code> argument, a file is still written to disk even if no motion events are discovered in the input file (#50)</li> <li>Variable framerate videos (VFR) are not fully supported, and will yield incorrect timestamps (#20)</li> </ul>"},{"location":"changelog/#dvr-scan-11","title":"DVR-Scan 1.1","text":""},{"location":"changelog/#11-july-12-2020","title":"1.1 (July 12, 2020)","text":""},{"location":"changelog/#changelog_8","title":"Changelog","text":"<ul> <li>[feature] Add new <code>-roi</code> argument to allow specifying a rectangular detection window, can select graphically or specify x/y/w/h via command line (thanks @klucsik)</li> <li>[bugfix] Fixed broken OpenCV compatibility layer causing issues with OpenCV 3.0+</li> <li>[general] Released project on pip, pinned OpenCV version requirement</li> </ul>"},{"location":"changelog/#known-issues_5","title":"Known Issues","text":"<ul> <li>Quiet mode (<code>-q/--quiet</code>) does not work correctly</li> <li>Variable framerate videos (VFR) are not fully supported, and will yield incorrect timestamps (#20)</li> </ul>"},{"location":"changelog/#dvr-scan-10","title":"DVR-Scan 1.0","text":""},{"location":"changelog/#101-january-12-2017","title":"1.0.1 (January 12, 2017)","text":"<ul> <li>[bugfix] unhandled exception affecting users running source distributions under Python 2.7 environments</li> </ul>"},{"location":"changelog/#10-january-11-2017","title":"1.0 (January 11, 2017)","text":"<ul> <li>[feature] detects motion events with configurable sensitivity and noise removal thresholds</li> <li>[feature] output events to individual video files, or as a single-file compilation</li> <li>[feature] allows input seeking, frame skipping, and output suppression mode</li> <li>[feature] configurable detection windows and pre/post-event inclusion length</li> </ul>"},{"location":"docs/","title":"Documentation","text":""},{"location":"docs/#dvr-scan-options","title":"<code>dvr-scan</code> Options","text":""},{"location":"docs/#general","title":"General","text":"<ul> <li> <p><pre>-h, --help</pre>     Show help message and all options and default values. Will also show any options overriden by your user config file, if set.</p> </li> <li> <p><pre>-V, --version</pre>     Show version information.</p> </li> <li> <p><pre>-L, --license</pre>     Show copyright information.</p> </li> </ul> <p>The following options control terminal output:</p> <ul> <li> <p><pre>--logfile log.txt</pre>     File to save (append) log output.</p> </li> <li> <p><pre>-q, --quiet</pre>     Suppress all console output except for final cutting list.</p> </li> <li> <p><pre>-v, --verbosity</pre>     Set verbosity of output messages, must be one of: <pre>debug, info, warning, error</pre> <pre><code>--verbosity info\n</code></pre> </p> </li> </ul>"},{"location":"docs/#input","title":"Input","text":"<ul> <li> <p><pre>-i video.mp4, --input video.mp4</pre>     Path to input video. May specify multiple input videos so long as they have the same resolution and framerate. Wildcards/globs are supported (e.g. <code>-i folder/*.mp4</code>). Extracted motion events use the filename of the first video only as a prefix.</p> </li> <li> <p><pre>-c settings.cfg, --config settings.cfg</pre>     Path to config file. If not set, tries to load one automatically from the user settings folder (run <code>dvr-scan --help</code> to see the exact path for your system). See the config file documentation for what options can be specified.</p> </li> </ul>"},{"location":"docs/#seekingduration","title":"Seeking/Duration","text":"<p>All time values can be given as a timecode (<code>HH:MM:SS</code> or <code>HH:MM:SS.nnn</code>), in seconds as a number followed by <code>s</code> (<code>123s</code> or <code>123.45s</code>), or as number of frames (e.g. <code>1234</code>).  <pre><code>dvr-scan -i video.mp4 --start-time 00:35:52 --duration 00:05:00\n</code></pre> </p> <ul> <li> <p><pre>-st time, --start-time time</pre>Timecode in video to start motion detection from</p> </li> <li> <p><pre>-dt time, --duration time</pre> Maximum duration of input to process.</p> </li> <li> <p><pre>-et time, --end-time time</pre> Timecode to stop processing input.</p> </li> </ul>"},{"location":"docs/#output","title":"Output","text":"<ul> <li> <p><pre>-so, --scan-only</pre> Do not save/extract events, only perform motion detection and display results.</p> </li> <li> <p><pre>-d path, --output-dir path</pre> Write all output files to <code>path</code>. If not specified, files are written in the working directory.</p> </li> <li> <p><pre>-m mode, --output-mode mode</pre> Mode to use for saving motion events. Must be one of:</p> <ul> <li> <p><pre>opencv</pre> :\u00a0 Use OpenCV for saving motion events. Requires .AVI output format.</p> </li> <li> <p><pre>ffmpeg</pre> :\u00a0 Use ffmpeg for saving motion events. Ffmpeg encoder args can be set using a config file (see the <code>ffmpeg-input-args</code> and <code>ffmpeg-output-args</code> options).</p> </li> <li> <p><pre>copy</pre> :\u00a0 Same as <code>ffmpeg</code>, but using stream copying mode (no reencoding). Can potentially create inaccurate events due to keyframe placement.</p> </li> </ul> <p> <pre><code>-m opencv\n</code></pre> </p> </li> </ul> <p>Multiple input files are not supported when <code>-m</code>/<code>--output-mode</code> is set to <code>ffmpeg</code> or <code>copy</code>. You can use <code>ffmpeg</code> to concatenate all input videos before using DVR-Scan, or run DVR-Scan in a for-loop.</p> <ul> <li> <p><pre>-o video.avi, --output video.avi</pre> Save all motion events to a single file, instead of the default (one file per event). Only supported with the default output mode (<code>opencv</code>). Requires <code>.avi</code> extension.</p> </li> <li> <p><pre>-mo mask.avi, --mask-output mask.avi</pre> Save a video containing the calculated motion mask on each frame. Useful for tuning motion detection. Requires <code>.avi</code> extension.</p> </li> </ul>"},{"location":"docs/#events","title":"Events","text":"<p>All time values can be given as a timecode (<code>HH:MM:SS</code> or <code>HH:MM:SS.nnn</code>), in seconds as a number followed by <code>s</code> (<code>123s</code> or <code>123.45s</code>), or as number of frames (e.g. <code>1234</code>).</p> <ul> <li> <p><pre>-l time, --min-event-length time</pre> Amount of time/frames that must have a motion score above the threshold setting before triggering a new event.  <pre><code>--min-event-length 2\n</code></pre> </p> </li> <li> <p><pre>-tb time, --time-before-event time</pre> Maximum amount of time to include before each event.  <pre><code>--time-before-event 1.5s\n</code></pre> </p> </li> <li> <p><pre>-tp time, --time-post-event time</pre> Maximum amount of time to include after each event. The event will end once no motion has been detected for this period of time.  <pre><code>--time-post-event time 2.0s\n</code></pre> </p> </li> </ul>"},{"location":"docs/#detection","title":"Detection","text":"<p>Motion detection can be fine-tuned for specific use cases.  When modifying detection options, it can be useful to generate a motion mask (<code>-mo mask.avi</code>) to visually see how DVR-Scan processes the input.</p>"},{"location":"docs/#motion-settings","title":"Motion Settings","text":"<ul> <li> <p><pre>-b type, --bg-subtractor type</pre> The type of background subtractor to use. Must be one of:</p> <ul> <li> <p><pre>MOG2</pre> :\u00a0 MOG2 Background Subtractor</p> </li> <li> <p><pre>CNT</pre> :\u00a0 CNT Background Subtractor, faster than <code>MOG</code> but uses different method, so may need to adjust threshold/kernel size</p> </li> <li> <p><pre>MOG2_CUDA</pre> :\u00a0 Nvidia CUDA\u00ae-based version of MOG2. Requires an OpenCV installation that was compiled with CUDA support.</p> </li> </ul> <p> <pre><code>--bg-subtractor MOG2\n</code></pre> </p> </li> <li> <p><pre>-t value, --threshold value</pre> Minimum amount of motion a frame must have to trigger an event. Lower values are more sensitive to motion, and require less movement to trigger an event. If too high, some movement may not be detected. Setting too low of a threshold can result in false detections. May require adjustment if other motion settings are changed.  <pre><code>--threshold 0.15\n</code></pre> </p> </li> <li> <p><pre>-k size, --kernel-size size</pre> Noise reduction kernel size, in pixels.  Kernel size can be increased to filter out smaller movements from a scene. Must be an odd integer at least <code>3</code> or greater. Can also be set to <code>0</code> to disable, or <code>-1</code> to select automatically based on input resolution. Auto sizes are <code>7</code> for 1080p or higher, <code>5</code> for 720p, and <code>3</code> for 480p or lower.  <pre><code>--kernel-size 5\n</code></pre> </p> </li> </ul>"},{"location":"docs/#regions","title":"Regions","text":"<p>Detection can be limited to specific regions of the frame. This can be done interactively using the <code>-r/--region-editor</code> flag, or by providing a list (<code>-a/--add-region</code>) or file (<code>-R/--load-region</code>) containing polygon data.</p> <p>Regions are specified as a list of points (X, Y) forming a closed polygon (shape with at least 3 points). For example, a triangle is defined as <code>0 0 100 0 50 50</code>. Multiple regions can be combined, and the result can also be saved to a file using <code>-s/--save-region</code>.</p> <p>Setting a smaller region of interest can improve scanning performance.</p> <ul> <li> <p><pre>-r, --region-editor</pre> Display region editor before processing. Press <code>H</code> to show controls in your terminal. See the user guide for more details.  <pre><code>dvr-scan -i video.mp4 -r\n</code></pre> </p> </li> <li> <p><pre>-a, --add-region</pre>Add a region to the scan. Regions are defined by a list of points (min. 3) that enclose the scanning region.  <pre><code>dvr-scan -i video.mp4 -a 50 50 100 50 75 75\n</code></pre> </p> </li> <li> <p><pre>-s, --save-region</pre>Save region data for this scan. Include all regions added or loaded via command line, and any edits made with the region editor if launched.  <pre><code>dvr-scan -i video.mp4 -r -s regions.txt\n</code></pre> </p> </li> <li> <p><pre>-R, --load-region</pre>Load region data an existing file.  <pre><code>dvr-scan -i video.mp4 -R regions.txt\n</code></pre> </p> </li> </ul>"},{"location":"docs/#frame-processing","title":"Frame Processing","text":"<p>Using these parameters can reduce the accuracy of motion detection if they are set too high.</p> <ul> <li> <p><pre>-df factor, --downscale-factor factor</pre> Integer factor to shrink video before processing, to improve performance. For example, if input video resolution is 1024 x 400, and <code>-df=2</code>, each frame is reduced to 512 x 200 before processing. Uses subsampling for downscaling.  <pre><code>--downscale-factor 2\n</code></pre> </p> </li> <li> <p><pre>-fs num_frames, --frame-skip num_frames</pre> Number of frames to skip after processing a given frame. Improves performance, at expense of frame and time accuracy, and may increase probability of missing motion events. If set, <code>-l</code>/<code>--min-event-length</code>, <code>-tb</code>/<code>--time-before-event</code>, and <code>-tp</code>/<code>--time-post-event</code> will all be scaled relative to the source framerate. Values above 1 or 2 are not recommended. When using the default output mode (<code>opencv</code>), skipped frames are not included. Set <code>-m</code>/<code>--output-mode</code> to <code>ffmpeg</code> or <code>copy</code> to include all frames from the input video when writing motion events to disk. Although adjusted for frame skipping, bounding box smoothing may be inconsistent when using frame skipping. Set <code>-bb 0</code> to disable smoothing.  <pre><code>--frame-skip 1\n</code></pre> </p> </li> </ul>"},{"location":"docs/#overlays","title":"Overlays","text":"<p>Overlays are only supported with the default output mode (<code>-m opencv</code>).</p> <ul> <li> <p><pre>-bb, --bounding-box</pre> Draw a bounding box around the areas where motion is detected. An optional amount of time for temporal smoothing can also be specified (e.g. <code>-bb 0.1s</code>). The default smoothing amount is 0.1 seconds. If set to 0 (<code>-bb 0</code>), smoothing is disabled. The color, thickness, and minimum size can be set with a config file.</p> </li> <li> <p><pre>-tc, --time-code</pre>  Draw time code of each frame on the top left corner. Text properties (e.g. color, font size, margin) can be set with a config file.</p> </li> <li> <p><pre>-fm, --frame-metrics</pre>  Draw frame metrics, including motion score, on the top right corner. Text properties (e.g. color, font size, margin) can be set with a config file.</p> </li> </ul>"},{"location":"docs/#config-file","title":"Config File","text":"<p>Settings are specified one per line as <code>option = value</code>. Lines starting with <code>#</code> are ignored as comments. The <code>dvr-scan.cfg</code> config template can be saved and used as a starting point (it includes the information in this section as comments).</p> <p>Configuration options are set as <code>option = value</code>, and lines starting with <code>#</code> are ignored as comments. For example:</p> <pre><code># This is an example of a DVR-Scan config file.\n# Lines starting with # are treated as comments.\ntime-before-event = 0.5s\ntime-post-event = 2.0s\nbounding-box = yes\nbounding-box-color = 0xFF0000\n</code></pre>"},{"location":"docs/#options","title":"Options","text":"<ul> <li> <p><pre>output-dir</pre>     Directory to output all created files. If unset, files will be created in the current working directory.      <pre><code>output-dir = C:/temp/scanned/\n</code></pre> </p> </li> <li> <p><pre>output-mode</pre>     Method of generating output videos: (<code>scan_only</code>, <code>opencv</code>, <code>ffmpeg</code>, <code>copy</code>). Not all features are supported in all modes.      <pre><code>output-mode = opencv\n</code></pre> </p> </li> </ul> <p>Multiple input files are not supported when <code>-m</code>/<code>--output-mode</code> is set to <code>ffmpeg</code> or <code>copy</code>. You can use <code>ffmpeg</code> to concatenate all input videos before using DVR-Scan, or run DVR-Scan in a for-loop.</p> <ul> <li> <p><pre>ffmpeg-input-args</pre>     Arguments added before the input to <code>ffmpeg</code> when output-mode is ffmpeg or copy. Note that -y and -nostdin are always added.      <pre><code>ffmpeg-input-args = -v error\n</code></pre> </p> </li> <li> <p><pre>ffmpeg-output-args</pre>     Encoder parameters used when generating output files when output-mode is ffmpeg. These arguments are added after the input and duration.      <pre><code>ffmpeg-output-args = -map 0 -c:v libx264 -preset fast -crf 21 -c:a aac -sn\n</code></pre> </p> </li> <li> <p><pre>opencv-codec</pre>     Four-letter identifier of the encoder/video codec to use when output-mode is opencv. Must be one of: (<code>XVID</code>, <code>MP4V</code>, <code>MP42</code>, <code>H264</code>).      <pre><code>opencv-codec = XVID\n</code></pre> </p> </li> <li> <p><pre>verbosity</pre>     Verbosity of console output: (<code>debug</code>, <code>info</code>, <code>warning</code>, <code>error</code>).      <pre><code>verbosity = info\n</code></pre> </p> </li> <li> <p><pre>quiet-mode</pre>     Suppress all console output: (<code>yes</code> or <code>no</code>). Only a final comma-separated list of timecodes will be printed if set to <code>yes</code>.      <pre><code>quiet-mode = no\n</code></pre> </p> </li> </ul>"},{"location":"docs/#events_1","title":"Events","text":"<p>All time values can be given as a timecode: (<code>HH:MM:SS</code> or <code>HH:MM:SS.nnn</code>), in seconds as a number followed by <code>s</code> (<code>123s</code> or <code>123.45s</code>), or as number of frames: (<code>1234</code>).</p> <ul> <li> <p><pre>min-event-length</pre>     Amount of time which must have motion in each frame to trigger an event.      <pre><code>min-event-length = 2\n</code></pre> </p> </li> <li> <p><pre>time-before-event</pre>     Amount of time to include before a motion event.      <pre><code>time-before-event = 1.5s\n</code></pre> </p> </li> <li> <p><pre>time-post-event</pre>     Amount of time to include after an event.      <pre><code>time-post-event = 2.0s\n</code></pre> </p> </li> </ul>"},{"location":"docs/#detection_1","title":"Detection","text":"<p>The following options control motion detection.  A more comprehensive description of each option can be found under the respective command line options.</p> <ul> <li> <p><pre>bg-subtractor</pre>     Type of background subtraction to use: (<code>MOG2</code>, <code>CNT</code>, <code>MOG2_CUDA</code>).      <pre><code>bg-subtractor = MOG2\n</code></pre> </p> </li> <li> <p><pre>threshold</pre>     Threshold representing amount of motion in a frame (or the ROI, if set) for a motion event to be triggered.      <pre><code>threshold = 0.15\n</code></pre> </p> </li> <li> <p><pre>max-threshold</pre>      Scores of this amount or higher are ignored. 255.0 is the maximum score, so values greater than 255.0 will disable the filter.      <pre><code>max-threshold = 255.0\n</code></pre> </p> </li> <li> <p><pre>kernel-size</pre>     Size (in pixels) of the noise reduction kernel. Size must be an odd number starting from 3, 0 to disable, or -1 to auto-set based on video resolution.      <pre><code>kernel-size = -1\n</code></pre> </p> </li> <li> <p><pre>region-of-interest</pre>     Region of interest of the form <code>(x, y), (w, h)</code>, where <code>x, y</code> is the top left corner, and w, h is the width/height in pixels.      <pre><code>region-of-interest = (100, 110), (50, 50)\n</code></pre> </p> </li> <li> <p><pre>downscale-factor</pre>     Integer factor to shrink video before processing. Values &lt;= 1 imply no downscaling.      <pre><code>downscale-factor = 2\n</code></pre> </p> </li> <li> <p><pre>frame-skip</pre>     Number of frames to skip between processing when looking for motion events.      <pre><code>frame-skip = 1\n</code></pre> </p> </li> </ul>"},{"location":"docs/#overlays_1","title":"Overlays","text":"<p>Color values can be specified as either <code>(R,G,B)</code> or in hex as <code>0xFFFFFF</code>. Time values can be given in seconds as a number followed by <code>s</code> (<code>123s</code> or <code>123.45s</code>), or as number of frames (e.g. <code>1234</code>).</p> Bounding Box <ul> <li> <p><pre>bounding-box</pre>     Enable bounding box: (<code>yes</code> or <code>no</code>).      <pre><code>bounding-box = yes\n</code></pre> </p> </li> <li> <p><pre>bounding-box-color</pre>     Box edge color specified as <code>R, G, B</code>.      <pre><code>bounding-box-color = 255, 0, 0\n</code></pre> </p> </li> <li> <p><pre>bounding-box-thickness</pre>     Thickness of bounding box, relative to largest edge of input video.      <pre><code>bounding-box-thickness = 0.0032\n</code></pre> </p> </li> <li> <p><pre>bounding-box-smooth-time</pre>     Amount of temporal smoothing to apply (seconds or frames).      <pre><code>bounding-box-smooth-time = 0.1s\n</code></pre> </p> </li> <li> <p><pre>bounding-box-min-size</pre>     Minimum side length of bounding box, relative to largest edge of input video.      <pre><code>bounding-box-min-size = 0.032\n</code></pre> </p> </li> </ul> Text Overlays <ul> <li> <p><pre>time-code</pre>     Enable timecode overlay: (<code>yes</code> or <code>no</code>). Draws timecode on top left of each frame.      <pre><code>time-code = yes\n</code></pre> </p> </li> <li> <p><pre>frame-metrics</pre>     Enable frame metrics overlay: (<code>yes</code> or <code>no</code>). Draws frame metrics, including motion score, on top right of each frame.      <pre><code>frame-metrics = yes\n</code></pre> </p> </li> <li> <p><pre>text-border</pre>     Margin from edge in pixels.      <pre><code>text-margin = 5\n</code></pre> </p> </li> <li> <p><pre>text-margin</pre>     Margin from edge in pixels.      <pre><code>text-margin = 5\n</code></pre> </p> </li> <li> <p><pre>text-font-scale</pre>     Scale factor for text size.      <pre><code>text-font-scale = 2.0\n</code></pre> </p> </li> <li> <p><pre>text-font-thickness</pre>     Thickness of font (integer values only).      <pre><code>text-font-thickness = 2\n</code></pre> </p> </li> <li> <p><pre>text-font-color</pre>     Text color specified as <code>R, G, B</code>.      <pre><code>text-font-color = 255, 255, 255\n</code></pre> </p> </li> <li> <p><pre>text-bg-color</pre>     Background color specified as <code>R, G, B</code>.      <pre><code>text-bg-color = 0, 0, 0\n</code></pre> </p> </li> </ul>"},{"location":"download/","title":"Download","text":""},{"location":"download/#python","title":"Python","text":"<p>1.6October 15, 2023</p> <p>Regular Install:</p> <pre><code>pip install dvr-scan[opencv]==1.6\n</code></pre> <p>Headless (Servers):</p> <pre><code>pip install dvr-scan[opencv-headless]==1.6\n</code></pre> <p>DVR-Scan is available on PyPI can be installed using <code>pip install dvr-scan[opencv]</code>. DVR-Scan works on Windows, Linux, and OSX, and requires Python 3.7 or higher.</p> <p>If want to use an existing OpenCV installation or require a non-PyPI version, you can omit the extras from <code>pip install</code>. You can also build and install DVR-Scan from source.</p>"},{"location":"download/#windows-distribution","title":"Windows Distribution","text":"<p>1.6October 15, 2023</p> <p> \u00a0 Installer <code>.msi</code> \u00a0 Portable <code>.zip</code></p> <p>The installer is recommended for most users.  Windows builds include all required dependencies to run DVR-Scan.  Only 64-bit builds are available.</p> CUDA\u00ae-Enabled Builds (Experimental) <p>Nvidia CUDA\u00ae builds are available, but still early in development. This version may not be the latest, and should be considered experimental. Not all GPU versions may be supported.</p> <p>1.5.1 (Not Latest)</p> <p> \u00a0 CUDA\u00ae Build <code>.zip</code></p> <p>Make sure to set <code>-b MOG2_CUDA</code> when running DVR-Scan (e.g. <code>dvr-scan -i video.mp4 -b MOG2_CUDA</code>). CUDA builds are done infrequently and may not be up to date.  The Python version of DVR-Scan is compatible with any CUDA\u00ae enabled version of the <code>opencv-python</code> module.  You can get better performance or use DVR-Scan on a wider variety of GPUs if you build the module on your system. with the latest SDK version.</p>"},{"location":"download/#source-code","title":"Source Code","text":"<p>The source code for DVR-Scan is available on Github.  The following commands will download the required packages and build DVR-Scan from source:</p> <pre><code>python -m pip install --upgrade pip build wheel virtualenv setuptools==62.3.4\npython -m pip install -r requirements.txt\npython -m build\n</code></pre> <p>Once <code>python -m build</code> succeeds, there will be a Python distribution in the <code>dist/</code> folder which can be installed using <code>pip</code>:</p> <pre><code>python -m pip install dist/dvr-scan-1.5.1.tar.gz\n</code></pre> Code Signing Policy <p>Free code signing provided by SignPath.io, certificate by SignPath Foundation.</p>"},{"location":"faq/","title":"Frequently Asked Questions","text":""},{"location":"faq/#how-can-i-stop-dvr-scan","title":"How can I stop DVR-Scan?","text":"<p>Hit Ctrl + C on your keyboard to exit DVR-Scan.</p>"},{"location":"faq/#where-is-the-output-saved","title":"Where is the output saved?","text":"<p>DVR-Scan saves all files in the current working directory (the location you are invoking the <code>dvr-scan</code> command from). You can override the output directory by setting the <code>-d</code>/<code>--output-dir</code> option:</p> <pre><code>dvr-scan -i video.mp4 -d events_folder/\n</code></pre>"},{"location":"faq/#how-can-i-scan-all-videos-in-a-folder","title":"How can I scan all videos in a folder?","text":"<p>You can use a wildcard in the input path to select multiple videos:</p> <pre><code>dvr-scan -i folder/*.mp4\n</code></pre> <p>You can also specify multiple paths directly.  Multiple inputs are not supported when <code>-m</code>/<code>--output-mode</code> is set to <code>ffmpeg</code> or <code>copy</code>. You can use <code>ffmpeg</code> to concatenate all input videos before using DVR-Scan as a workaround.</p> <p>Note that DVR-Scan will concatenate the videos together in the order they are specified (or expanded if using wildcards). To avoid this, you can run DVR-Scan on each video in a loop. For example, on Windows:</p> <pre><code>for /F %i in ('dir *.mp4 /b') do dvr-scan -i %i\n</code></pre> <p>Or on Linux/OSX:</p> <pre><code>target=\"/some/folder\"\nfor f in \"$target\"*\ndo\n   dvr-scan -i $f\ndone\n</code></pre>"},{"location":"faq/#how-can-i-improve-scanning-performance","title":"How can I improve scanning performance?","text":"<p>Adjusting motion detection settings can have a large effect on performance:</p> <ul> <li>Limiting detection to a specific region of the frame with the region editor will also improve performance</li> <li>Setting the output mode to either <code>ffmpeg</code> or <code>copy</code> can also improve performance compared to the default (<code>opencv</code>)</li> <li>Downscaling high resolution videos can also improve performance greatly, at the expense of accuracy</li> </ul>"},{"location":"faq/#how-can-i-join-several-videos-together-when-processing","title":"How can I join several videos together when processing?","text":"<p>If you have a series of video clips from the same source, you can append subsequent video clips to the DVR-Scan input by including multiple files after <code>-i</code>.  For example:</p> <pre><code>dvr-scan -i video0000.mp4 video0001.mp4 video0002.mp4\n</code></pre> <p>You can also use wildcards in the input path:</p> <pre><code>dvr-scan -i video*.mp4\n</code></pre> <p>Each video must have the same resolution and framerate. Videos are processed in the same order as they appear in the command, and extracted events will use the first video's filename as a template.</p> <p>Multiple input videos are not supported when output mode <code>-m</code>/<code>--output-mode</code> is set to either <code>ffmpeg</code> or <code>copy</code>. As a workaround, you can use ffmpeg to concatenate all input videos before using DVR-Scan to process them.</p>"},{"location":"faq/#how-can-i-fix-a-video-that-plays-but-cannot-be-scanned","title":"How can I fix a video that plays but cannot be scanned?","text":"<p>Video files with corrupted/malformed headers can sometimes be fixed by re-muxing them into a new container.  This can be done using either <code>ffmpeg</code> or <code>mkvmerge</code> (both tools support codec copying mode).</p> <p>If the process is successful, the output video should be roughly the same size as the original, and playback fine in most media players.  Specifically, it should also report the video's length accurately, and allow seeking throughout the video.</p>"},{"location":"faq/#how-do-i-run-dvr-scan-in-a-docker-container","title":"How do I run DVR-Scan in a Docker container?","text":"<p>DVR-Scan comes with a Dockerfile so you can easily get things working without worrying about installing dependencies locally. Simply install Docker, then run the following in the root of the project:</p> <pre><code>$ docker build -t dvr-scan .\n</code></pre> <p>This will build the container, and then to run it on a file in the local directory, you'd run the command like this:</p> <pre><code>$ docker run --rm -it -v $(pwd):/videos/ dvr-scan -i your_video_file.mkv\n</code></pre> <p>The most important thing to keep in mind is the <code>-v</code> flag, which specifies the local folders to share. Inside the docker container <code>/videos/</code> is the working directory, so map that to wherever you want to process your files.</p>"},{"location":"faq/#how-can-i-submit-a-bug-report","title":"How can I submit a bug report?","text":"<p>Bug reports can be submitted to the DVR-Scan issue tracker.  Please provide as much information as possible to help triage the issue you are facing, and upload any sample material with the report when possible.</p>"},{"location":"faq/#i-have-another-question","title":"I have another question...","text":"<p>For technical help, you can try starting a discussion on Github.</p>"},{"location":"guide/","title":"User Guide","text":""},{"location":"guide/#running-dvr-scan","title":"Running DVR-Scan","text":"<p>After downloading, you should have the <code>dvr-scan</code> command available on your system from a terminal or command prompt. Try running <code>dvr-scan --help</code>.</p> <p>For portable versions, replace <code>dvr-scan</code> with the path to <code>dvr-scan.exe</code> in the extracted files on your system.</p> <p>To extract all motion events from a video, you can start with:</p> <pre><code>dvr_scan -i video.mp4\n</code></pre> <p>This will produce output events in your working directory starting with the prefix <code>video.DSME_</code> (e.g. <code>video.DSME_0001.avi</code>). If you want to limit scanning to a particular part of the video frame, you can use the region editor:</p> <pre><code>dvr_scan -i video.mp4 -r\n</code></pre> <p>DVR-Scan should provide good results for most use cases, but can be fine tuned for specific use cases. There are two main categories of these settings: detection and sensitivity, and event parameters.</p> <p>See the documentation for a complete list of all command-line and configuration file options which can be set. You can also type <code>dvr-scan --help</code> for an overview of command line options. Lastly, most program options can be set using a config file.  DVR-Scan also looks for a <code>dvr-scan.cfg</code> file in the following locations:</p> <ul> <li>Windows: <code>C:/Users/%USERNAME%/AppData/Local/DVR-Scan/dvr-scan.cfg</code></li> <li>Linux: <code>~/.config/DVR-Scan/dvr-scan.cfg</code> or <code>$XDG_CONFIG_HOME/dvr-scan.cfg</code></li> <li>OSX: <code>~/Library/Preferences/DVR-Scan/dvr-scan.cfg</code></li> </ul> <p>These settings will be used by default each time you run DVR-Scan, unless you override them.</p>"},{"location":"guide/#multiple-videos","title":"Multiple Videos","text":"<p>You can specify multiple input videos as long as they have the same resolution and framerate:</p> <pre><code>dvr_scan -i video1.mp4 video2.mp4 video*.mp4\n</code></pre> <p>Wildcards are also supported:</p> <pre><code>dvr_scan -i video*.mp4\n</code></pre> <p>Note that this will concatenate the videos together in the order they are specified.</p> <p>This can be undesirable for some types of footage being analyzed.  For example, if a folder contains different dashcam footage clips, a significant amount of time can pass between clips (e.g. when the vehicle is shut off).  This can result in DVR-Scan generating false events between videos.</p> <p>To avoid this, you can run DVR-Scan on each video in a loop. For example, on Windows:</p> <pre><code>for /F %i in ('dir *.mp4 /b') do dvr-scan -i %i\n</code></pre> <p>Or on Linux/OSX:</p> <pre><code>for f in /mnt/videos/*.mp4\ndo\n    dvr-scan -i $f\ndone\n</code></pre> <p>Note that multiple inputs also do not support other output modes. You can use <code>ffmpeg</code> to concatenate all input videos before processing, or use a for-loop as above.</p>"},{"location":"guide/#output-format","title":"Output Format","text":"<p>By default, DVR-Scan uses the OpenCV VideoWriter for video output. This usually requires the output files be in .AVI format of some kind.</p> <p>DVR-Scan also supports using <code>ffmpeg</code> to extract motion events. This is done by setting <code>-m</code>/<code>--output-mode</code> to <code>ffmpeg</code> (reencode) or <code>copy</code> (codec copy mode, may not be frame accurate). For example:</p> <pre><code>dvr-scan -i video.mp4 -m ffmpeg\n</code></pre> <p>You can customize the options passed to <code>ffmpeg</code> using a config file (see the <code>ffmpeg-input-args</code> and <code>ffmpeg-output-args</code>) settings).</p> <p>Setting output mode to <code>ffmpeg</code> or <code>copy</code> has the following caveats:</p> <ul> <li>inputs that have a variable framerate (VFR) may not be  extracted reliably</li> <li>input concatenation is not supported</li> <li>overlays are not supported</li> </ul> <p>You can customize the options passed to <code>ffmpeg</code> using a config file (see the <code>ffmpeg-input-args</code> and <code>ffmpeg-output-args</code>) settings).</p>"},{"location":"guide/#vfr-variable-framerate","title":"VFR (Variable Framerate)","text":"<p>Variable framerate (VFR) video support is still under development and may produce incorrect results.</p> <p>Variable framerate (VFR) videos are not well supported, but basic functionality does work. Motion detection and event extraction should work correctly with default settings. Note however that calculated timestamps may be incorrect, and extracted footage may playback at the wrong speed.</p> <p>Frame numbers will be accurate, but timestamps will not.  This can yield incorrect results when setting output mode to <code>ffmpeg</code> or <code>copy</code>, as well as inaccurate timestamps when using overlays. This issue is tracked on Github.  If this workflow is required, you can re-encode the source material into fixed framerate before processing.</p>"},{"location":"guide/#region-editor","title":"Region Editor","text":"<p>With the Region Editor, you can limit motion detection to specific areas of the frame.  You can launch the region editor when starting DVR-Scan by adding <code>-r</code>/<code>--region-editor</code>:</p> <pre><code>dvr-scan -i video.mp4 -r\n</code></pre> <p>The region editor will open and display a rectangle over the first frame:</p> <p></p> <p>You can use the mouse to add or move points when editing regions. Left click to add a new point, or drag an existing one. Left/middle click can be used to delete a point (see controls).</p> <p>Press <code>S</code> to save the current regions to a file, or <code>O</code> to load existing ones.  When you are satisfied with the region, press space bar or enter to start processing the video.  You can press escape to quit the program without saving.</p>"},{"location":"guide/#regions","title":"Regions","text":"<p>Regions are a set of points creating a closed shape. A rectangle will be created by default for you to modify.</p> <p>You can use the left mouse button to add a new point (keyboard: <code>A</code>) and right/middle mouse button (keyboard <code>X</code>) to delete a point. You can left click to drag existing points. This allows creating complex shapes, such as:</p> <p></p> <p>Regions can be created by pressing <code>T</code> and deleted by pressing <code>G</code>.</p> <p></p> <p>Regions can be selected using the number keys <code>1</code>-<code>9</code>, or by pressing <code>k</code>/<code>l</code> to select the previous/next region. Note that only one region can be active at a time (you must select an existing shape to modify it).</p> <p>Lastly, you can hit <code>M</code> to view a cutout of the active mask:</p> <p></p>"},{"location":"guide/#controls","title":"Controls","text":""},{"location":"guide/#regions_1","title":"Regions","text":"Command Keyboard Mouse Add Point <code>A</code> Left Delete Point <code>X</code> RightMiddle Add Region <code>T</code> Delete Region <code>G</code> Select Region <code>1</code> - <code>9</code> Next Region <code>L</code> Previous Region <code>K</code>"},{"location":"guide/#editor","title":"Editor","text":"Command Keyboard Alt Mask On/Off <code>M</code> Start Scan Space,Enter Quit Escape Save <code>S</code> Load <code>O</code> Undo <code>Z</code> <code>Ctrl + Z</code> Redo <code>Y</code> <code>Ctrl + Y</code> Print Points <code>C</code>"},{"location":"guide/#display","title":"Display","text":"Command Keyboard Mouse Downscale Increase <code>W</code> Downscale Decrease <code>E</code> Antialiasing <code>Q</code> Window Mode <code>R</code> Window Menu Right"},{"location":"resources/","title":"Resources","text":""},{"location":"resources/#bug-reports","title":"Bug Reports","text":"<p>Bugs and issues with DVR-Scan are handled through the issue tracker on Github. If you encounter into any bugs while using DVR-Scan, please feel free to create a new issue describing the problem.</p> <p>Make sure to set <code>--verbosity debug</code> when attaching program logs. Attach examples where possible to demonstrate the problem. Include any information you think is relevant to replicate and resolve the issue.</p> <p>For technical help, you can try starting a discussion on Github.</p>"},{"location":"resources/#contributing","title":"Contributing","text":"<p>DVR-Scan was created by Brandon Castellano and is released as completely free software. It is developed in the open on Github, where anyone can contribute to the project. Issues and bug reports can be submitted online.  Pull requests are welcome and encouraged.</p> <p>Note that DVR-Scan is released under [the BSD 2-Clause license], and submitted code must comply with this license.</p>"},{"location":"resources/#similar-software","title":"Similar Software","text":"<p>The following is a list of alternative software that shares some of the functionality of DVR-Scan.  Feel free to provide suggestions for software you think should appear on this list by opening a topic in the issue tracker (see the Contributing page for details).</p> <ul> <li> <p>SafeMotion by Safeware Technologies (link): freeware, closed source, Windows-only. Also requires OpenCV. Has options for object size, movement scale, and masking.</p> </li> <li> <p>Yawcam by malun (link): freeware, closed source, Windows-only.  Requires Java.  Has options for detection level sensitivity, tolerance, and area masking.</p> </li> <li> <p>PySceneDetect (link): Program for detecting cuts in video scenes based on content detection or intensity thresholding.  Freeware, open source, cross-platform, also requires OpenCV.</p> </li> </ul>"},{"location":"resources/#license-copyright","title":"License &amp; Copyright","text":""},{"location":"resources/#dvr-scan","title":"DVR-Scan","text":"<pre><code>                DVR-Scan License (BSD 2-Clause)\n          &lt; https://github.com/Breakthrough/DVR-Scan &gt;\n\nCopyright (C) 2016-2023, Brandon Castellano.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n    1. Redistributions of source code must retain the above copyright\n       notice, this list of conditions and the following disclaimer.\n\n    2. Redistributions in binary form must reproduce the above\n       copyright notice, this list of conditions and the following\n       disclaimer in the documentation and/or other materials\n       provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nHOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n</code></pre>"},{"location":"resources/#third-party","title":"Third-Party","text":"<p>DVR-Scan uses the following third-party libraries:</p> <ul> <li>NumPy [Copyright (C) 2005, Numpy Developers]</li> <li>OpenCV [Copyright (C) 2022, OpenCV Team]</li> <li>FFmpeg [Copyright (C) 2001, Fabrice Bellard]</li> <li>CUDA [Copyright (C) 2020, Nvidia Corporation]</li> </ul> <p>See the <code>LICENSE-THIRDPARTY</code> file included with the distribution of DVR-Scan you are using, or run DVR-Scan with the <code>-L</code>/<code>--license</code> option for the terms under which these components are redistributed.</p>"}]}